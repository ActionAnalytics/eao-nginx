# Ajax
server {
  listen       8080;
  server_name  ${NGINX__AJAX__SERVER_NAME};

  return 301 http://${NGINX__AJAX__REDIRECT};
}

# EPIC Public
server {
  listen       8080;
  server_name  ${NGINX__EPIC_PUBLIC__SERVER_NAME};

  # Allows non-standard headers like SMGOV_USERGUID
  ignore_invalid_headers off;

  # 172.16.0.0/12 is the entire addressable space in the cluster
  #set_real_ip_from  172.51.0.0/22;
  #set_real_ip_from  172.51.4.0/22;
  #real_ip_header    X-Forwarded-For;

  location / {
    # proxy all traffic to this URL,
    # note the trailing slash strips out the /proxy path on
    # the request to the upstream server

    proxy_pass ${NGINX__EPIC_PUBLIC__PROXY__ROOT};

    # Ensure HTTP get passed thru
    proxy_pass_request_headers on;

    # its helpful to cache these responses
    proxy_cache globalcache;

    # Deploy-time configurable
    ${HTTP_BASIC2}
  }

  # For status of ngnix service
  location /nginx_status {
    # Enable Nginx stats
    stub_status on;
    # Only allow access from localhost
    allow 127.0.0.1;
    # Other request should be denied
    deny all;
    # No need to log this request, its just noise
    access_log off;
  }
#}
#
#server {
#  listen       8080;
#  server_name  ${NGINX__EPIC_PUBLIC__SERVER_NAME};
#
#  # Allows non-standard headers like SMGOV_USERGUID
#  ignore_invalid_headers off;
#
#  # 172.16.0.0/12 is the entire addressable space in the cluster
#  #set_real_ip_from  172.51.0.0/22;
#  #set_real_ip_from  172.51.4.0/22;
#  #real_ip_header    X-Forwarded-For;
#
#  location / {
#    # proxy all traffic to this URL,
#    # note the trailing slash strips out the /proxy path on
#    # the request to the upstream server
#
#    proxy_pass ${NGINX__EPIC_PUBLIC__PROXY__ROOT};
#
#    # Ensure HTTP get passed thru
#    proxy_pass_request_headers on;
#
#    # its helpful to cache these responses
#    proxy_cache globalcache;
#
#    # Deploy-time configurable
#    ${HTTP_BASIC}
#  }

  # Cache the lib directory
  location /lib {
    proxy_pass ${NGINX__EPIC_PUBLIC__PROXY__ROOT};
    proxy_cache   globalcache;
  }
#
#  # For status of ngnix service
#  location /nginx_status {
#    # Enable Nginx stats
#    stub_status on;
#    # Only allow access from localhost
#    allow 127.0.0.1;
#    # Other request should be denied
#    deny all;
#    # No need to log this request, its just noise
#    access_log off;
#  }
}


#EPIC Admin
server {
  listen       8080 default_server;
  server_name  ${NGINX__EPIC_ADMIN__SERVER_NAME};

  # Allows non-standard headers like SMGOV_USERGUID
  ignore_invalid_headers off;

  # 172.16.0.0/12 is the entire addressable space in the cluster
  #set_real_ip_from  172.51.0.0/22;
  #set_real_ip_from  172.51.4.0/22;
  #real_ip_header    X-Forwarded-For;

  location /parse {
    # proxy all traffic to this URL,
    # note the trailing slash strips out the /proxy path on
    # the request to the upstream server
    
    # Deploy-time configurable
    ${NGINX__EPIC_ADMIN__PROXY_DEPLOY_CONFIG__PARSE}

    proxy_pass ${NGINX__EPIC_ADMIN__PROXY__PARSE};

    # Ensure HTTP get passed thru
    proxy_pass_request_headers on;

    # its helpful to cache these responses
    proxy_cache globalcache;
  }

  location /parse-dashboard/ {
    # proxy all traffic to this URL,
    # note the trailing slash strips out the /proxy path on
    # the request to the upstream server

    proxy_pass ${NGINX__EPIC_ADMIN__PROXY__PARSE};

    # Ensure HTTP get passed thru
    proxy_pass_request_headers on;

    # its helpful to cache these responses
    proxy_cache globalcache;
  }

  # For eao inspections app
  location /uploadcentre {
    proxy_pass ${NGINX__EPIC_ADMIN__PROXY__UPLOADCENTRE};

    # Ensure HTTP get passed thru
    proxy_pass_request_headers on;

    # its helpful to cache these responses
    proxy_cache globalcache;
  }

  location / {
    # proxy all traffic to this URL,
    # note the trailing slash strips out the /proxy path on
    # the request to the upstream server

    proxy_pass ${NGINX__EPIC_ADMIN__PROXY__ROOT};

    # Ensure HTTP get passed thru
    proxy_pass_request_headers on;

    # its helpful to cache these responses
    proxy_cache globalcache;

    # Deploy-time configurable
    ${HTTP_BASIC}
  }

  location /api {
    # proxy all traffic to this URL,
    # note the trailing slash strips out the /proxy path on
    # the request to the upstream server

    proxy_pass ${NGINX__EPIC_ADMIN__PROXY__ROOT};

    # Ensure HTTP get passed thru
    proxy_pass_request_headers on;

    # its helpful to cache these responses
    proxy_cache globalcache;

    # Deploy-time configurable
    ${NGINX__EPIC_ADMIN__PROXY_DEPLOY_CONFIG__API}
  }

  location /api-public {
    # proxy all traffic to this URL,
    # note the trailing slash strips out the /proxy path on
    # the request to the upstream server

    proxy_pass ${NGINX__EPIC_ADMIN__PROXY__API_PUBLIC};

    # Ensure HTTP get passed thru
    proxy_pass_request_headers on;

    # its helpful to cache these responses
    proxy_cache globalcache;

    # Deploy-time configurable
    ${NGINX__EPIC_ADMIN__PROXY_DEPLOY_CONFIG__API_PUBLIC}
  }

  location /api/export/ {
    # proxy all traffic to this URL,
    # note the trailing slash strips out the /proxy path on
    # the request to the upstream server

    proxy_pass ${NGINX__EPIC_ADMIN__PROXY__API_EXPORT};

    # Ensure HTTP get passed thru
    proxy_pass_request_headers on;

    # its helpful to cache these responses
    proxy_cache globalcache;

    # Deploy-time configurable
    ${NGINX__EPIC_ADMIN__PROXY_DEPLOY_CONFIG__API_EXPORT}
  }

  location /api/geocoder/ {
    # proxy all traffic to this URL,
    # note the trailing slash strips out the /proxy path on
    # the request to the upstream server

    proxy_pass ${NGINX__EPIC_ADMIN__PROXY__API_GEOCODER};

    # Ensure HTTP get passed thru
    proxy_pass_request_headers on;

    # append api key to authenticate with geocoder service
    # if the value is an empty string then this field will not be passed to the proxied server
    proxy_set_header apikey ${NGINX__EPIC_ADMIN__PROXY_KEY__API_GEOCODER};

    # its helpful to cache these responses
    proxy_cache globalcache;

    # Deploy-time configurable
    # Allow injecting extra configuration into the location block
    ${NGINX__EPIC_ADMIN__PROXY_DEPLOY_CONFIG__API_GEOCODER}
  }

  # Cache the lib directory
  location /lib {
    proxy_pass ${NGINX__EPIC_ADMIN__PROXY__ROOT};
    proxy_cache   globalcache;
  }

  # For status of ngnix service
  location /nginx_status {
    # Enable Nginx stats
    stub_status on;
    # Only allow access from localhost
    allow 127.0.0.1;
    # Other request should be denied
    deny all;
    # No need to log this request, its just noise
    access_log off;
  }

  # For e-guide service
  location /eguide {
    proxy_pass ${NGINX__EPIC_ADMIN__PROXY__EGUIDE};

    # Ensure HTTP get passed thru
    proxy_pass_request_headers on;

    # its helpful to cache these responses
    proxy_cache globalcache;

    ${HTTP_BASIC1}
  }
}
